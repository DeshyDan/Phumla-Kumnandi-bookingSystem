<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>